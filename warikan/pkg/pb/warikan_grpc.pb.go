// Config

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.0
// source: warikan.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Warikan_CreateBill_FullMethodName        = "/warikan.Warikan/CreateBill"
	Warikan_ConnectBill_FullMethodName       = "/warikan.Warikan/ConnectBill"
	Warikan_ConfirmBill_FullMethodName       = "/warikan.Warikan/ConfirmBill"
	Warikan_AddUser_FullMethodName           = "/warikan.Warikan/AddUser"
	Warikan_RemoveUser_FullMethodName        = "/warikan.Warikan/RemoveUser"
	Warikan_GetUsersList_FullMethodName      = "/warikan.Warikan/GetUsersList"
	Warikan_SetItems_FullMethodName          = "/warikan.Warikan/SetItems"
	Warikan_AddItem_FullMethodName           = "/warikan.Warikan/AddItem"
	Warikan_RemoveItem_FullMethodName        = "/warikan.Warikan/RemoveItem"
	Warikan_GetItemsList_FullMethodName      = "/warikan.Warikan/GetItemsList"
	Warikan_GetItem_FullMethodName           = "/warikan.Warikan/GetItem"
	Warikan_SetOwners_FullMethodName         = "/warikan.Warikan/SetOwners"
	Warikan_AddOwner_FullMethodName          = "/warikan.Warikan/AddOwner"
	Warikan_RemoveOwner_FullMethodName       = "/warikan.Warikan/RemoveOwner"
	Warikan_GetItemOwnersList_FullMethodName = "/warikan.Warikan/GetItemOwnersList"
)

// WarikanClient is the client API for Warikan service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WarikanClient interface {
	CreateBill(ctx context.Context, in *CreateBillRequest, opts ...grpc.CallOption) (*CreateBillResponse, error)
	ConnectBill(ctx context.Context, in *ConnectBillRequest, opts ...grpc.CallOption) (Warikan_ConnectBillClient, error)
	ConfirmBill(ctx context.Context, in *ConfirmBillRequest, opts ...grpc.CallOption) (*ConfirmBillResponse, error)
	// ############
	// Methods for each room
	// ############
	// Users
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error)
	RemoveUser(ctx context.Context, in *RemoveUserRequest, opts ...grpc.CallOption) (*RemoveUserResponse, error)
	GetUsersList(ctx context.Context, in *GetUsersListRequest, opts ...grpc.CallOption) (*GetUsersListResponse, error)
	// Items
	SetItems(ctx context.Context, in *SetItemRequest, opts ...grpc.CallOption) (*SetItemResponse, error)
	AddItem(ctx context.Context, in *AddItemRequest, opts ...grpc.CallOption) (*AddItemResponse, error)
	RemoveItem(ctx context.Context, in *RemoveItemRequest, opts ...grpc.CallOption) (*RemoveItemResponse, error)
	GetItemsList(ctx context.Context, in *GetItemsListRequest, opts ...grpc.CallOption) (*GetItemsListResponse, error)
	GetItem(ctx context.Context, in *GetItemRequest, opts ...grpc.CallOption) (*GetItemResponse, error)
	// ItemOwners
	SetOwners(ctx context.Context, in *SetItemOwnerRequest, opts ...grpc.CallOption) (*SetItemOwnerResponse, error)
	AddOwner(ctx context.Context, in *AddItemOwnerRequest, opts ...grpc.CallOption) (*AddItemOwnerResponse, error)
	RemoveOwner(ctx context.Context, in *RemoveItemOwnerRequest, opts ...grpc.CallOption) (*RemoveItemOwnerResponse, error)
	GetItemOwnersList(ctx context.Context, in *GetItemOwnersRequest, opts ...grpc.CallOption) (*GetItemOwnersResponse, error)
}

type warikanClient struct {
	cc grpc.ClientConnInterface
}

func NewWarikanClient(cc grpc.ClientConnInterface) WarikanClient {
	return &warikanClient{cc}
}

func (c *warikanClient) CreateBill(ctx context.Context, in *CreateBillRequest, opts ...grpc.CallOption) (*CreateBillResponse, error) {
	out := new(CreateBillResponse)
	err := c.cc.Invoke(ctx, Warikan_CreateBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) ConnectBill(ctx context.Context, in *ConnectBillRequest, opts ...grpc.CallOption) (Warikan_ConnectBillClient, error) {
	stream, err := c.cc.NewStream(ctx, &Warikan_ServiceDesc.Streams[0], Warikan_ConnectBill_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &warikanConnectBillClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Warikan_ConnectBillClient interface {
	Recv() (*ConnectBillResponse, error)
	grpc.ClientStream
}

type warikanConnectBillClient struct {
	grpc.ClientStream
}

func (x *warikanConnectBillClient) Recv() (*ConnectBillResponse, error) {
	m := new(ConnectBillResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *warikanClient) ConfirmBill(ctx context.Context, in *ConfirmBillRequest, opts ...grpc.CallOption) (*ConfirmBillResponse, error) {
	out := new(ConfirmBillResponse)
	err := c.cc.Invoke(ctx, Warikan_ConfirmBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error) {
	out := new(AddUserResponse)
	err := c.cc.Invoke(ctx, Warikan_AddUser_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) RemoveUser(ctx context.Context, in *RemoveUserRequest, opts ...grpc.CallOption) (*RemoveUserResponse, error) {
	out := new(RemoveUserResponse)
	err := c.cc.Invoke(ctx, Warikan_RemoveUser_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) GetUsersList(ctx context.Context, in *GetUsersListRequest, opts ...grpc.CallOption) (*GetUsersListResponse, error) {
	out := new(GetUsersListResponse)
	err := c.cc.Invoke(ctx, Warikan_GetUsersList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) SetItems(ctx context.Context, in *SetItemRequest, opts ...grpc.CallOption) (*SetItemResponse, error) {
	out := new(SetItemResponse)
	err := c.cc.Invoke(ctx, Warikan_SetItems_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) AddItem(ctx context.Context, in *AddItemRequest, opts ...grpc.CallOption) (*AddItemResponse, error) {
	out := new(AddItemResponse)
	err := c.cc.Invoke(ctx, Warikan_AddItem_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) RemoveItem(ctx context.Context, in *RemoveItemRequest, opts ...grpc.CallOption) (*RemoveItemResponse, error) {
	out := new(RemoveItemResponse)
	err := c.cc.Invoke(ctx, Warikan_RemoveItem_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) GetItemsList(ctx context.Context, in *GetItemsListRequest, opts ...grpc.CallOption) (*GetItemsListResponse, error) {
	out := new(GetItemsListResponse)
	err := c.cc.Invoke(ctx, Warikan_GetItemsList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) GetItem(ctx context.Context, in *GetItemRequest, opts ...grpc.CallOption) (*GetItemResponse, error) {
	out := new(GetItemResponse)
	err := c.cc.Invoke(ctx, Warikan_GetItem_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) SetOwners(ctx context.Context, in *SetItemOwnerRequest, opts ...grpc.CallOption) (*SetItemOwnerResponse, error) {
	out := new(SetItemOwnerResponse)
	err := c.cc.Invoke(ctx, Warikan_SetOwners_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) AddOwner(ctx context.Context, in *AddItemOwnerRequest, opts ...grpc.CallOption) (*AddItemOwnerResponse, error) {
	out := new(AddItemOwnerResponse)
	err := c.cc.Invoke(ctx, Warikan_AddOwner_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) RemoveOwner(ctx context.Context, in *RemoveItemOwnerRequest, opts ...grpc.CallOption) (*RemoveItemOwnerResponse, error) {
	out := new(RemoveItemOwnerResponse)
	err := c.cc.Invoke(ctx, Warikan_RemoveOwner_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warikanClient) GetItemOwnersList(ctx context.Context, in *GetItemOwnersRequest, opts ...grpc.CallOption) (*GetItemOwnersResponse, error) {
	out := new(GetItemOwnersResponse)
	err := c.cc.Invoke(ctx, Warikan_GetItemOwnersList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WarikanServer is the server API for Warikan service.
// All implementations must embed UnimplementedWarikanServer
// for forward compatibility
type WarikanServer interface {
	CreateBill(context.Context, *CreateBillRequest) (*CreateBillResponse, error)
	ConnectBill(*ConnectBillRequest, Warikan_ConnectBillServer) error
	ConfirmBill(context.Context, *ConfirmBillRequest) (*ConfirmBillResponse, error)
	// ############
	// Methods for each room
	// ############
	// Users
	AddUser(context.Context, *AddUserRequest) (*AddUserResponse, error)
	RemoveUser(context.Context, *RemoveUserRequest) (*RemoveUserResponse, error)
	GetUsersList(context.Context, *GetUsersListRequest) (*GetUsersListResponse, error)
	// Items
	SetItems(context.Context, *SetItemRequest) (*SetItemResponse, error)
	AddItem(context.Context, *AddItemRequest) (*AddItemResponse, error)
	RemoveItem(context.Context, *RemoveItemRequest) (*RemoveItemResponse, error)
	GetItemsList(context.Context, *GetItemsListRequest) (*GetItemsListResponse, error)
	GetItem(context.Context, *GetItemRequest) (*GetItemResponse, error)
	// ItemOwners
	SetOwners(context.Context, *SetItemOwnerRequest) (*SetItemOwnerResponse, error)
	AddOwner(context.Context, *AddItemOwnerRequest) (*AddItemOwnerResponse, error)
	RemoveOwner(context.Context, *RemoveItemOwnerRequest) (*RemoveItemOwnerResponse, error)
	GetItemOwnersList(context.Context, *GetItemOwnersRequest) (*GetItemOwnersResponse, error)
	mustEmbedUnimplementedWarikanServer()
}

// UnimplementedWarikanServer must be embedded to have forward compatible implementations.
type UnimplementedWarikanServer struct {
}

func (UnimplementedWarikanServer) CreateBill(context.Context, *CreateBillRequest) (*CreateBillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBill not implemented")
}
func (UnimplementedWarikanServer) ConnectBill(*ConnectBillRequest, Warikan_ConnectBillServer) error {
	return status.Errorf(codes.Unimplemented, "method ConnectBill not implemented")
}
func (UnimplementedWarikanServer) ConfirmBill(context.Context, *ConfirmBillRequest) (*ConfirmBillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmBill not implemented")
}
func (UnimplementedWarikanServer) AddUser(context.Context, *AddUserRequest) (*AddUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (UnimplementedWarikanServer) RemoveUser(context.Context, *RemoveUserRequest) (*RemoveUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUser not implemented")
}
func (UnimplementedWarikanServer) GetUsersList(context.Context, *GetUsersListRequest) (*GetUsersListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsersList not implemented")
}
func (UnimplementedWarikanServer) SetItems(context.Context, *SetItemRequest) (*SetItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetItems not implemented")
}
func (UnimplementedWarikanServer) AddItem(context.Context, *AddItemRequest) (*AddItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddItem not implemented")
}
func (UnimplementedWarikanServer) RemoveItem(context.Context, *RemoveItemRequest) (*RemoveItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveItem not implemented")
}
func (UnimplementedWarikanServer) GetItemsList(context.Context, *GetItemsListRequest) (*GetItemsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemsList not implemented")
}
func (UnimplementedWarikanServer) GetItem(context.Context, *GetItemRequest) (*GetItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItem not implemented")
}
func (UnimplementedWarikanServer) SetOwners(context.Context, *SetItemOwnerRequest) (*SetItemOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOwners not implemented")
}
func (UnimplementedWarikanServer) AddOwner(context.Context, *AddItemOwnerRequest) (*AddItemOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOwner not implemented")
}
func (UnimplementedWarikanServer) RemoveOwner(context.Context, *RemoveItemOwnerRequest) (*RemoveItemOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveOwner not implemented")
}
func (UnimplementedWarikanServer) GetItemOwnersList(context.Context, *GetItemOwnersRequest) (*GetItemOwnersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemOwnersList not implemented")
}
func (UnimplementedWarikanServer) mustEmbedUnimplementedWarikanServer() {}

// UnsafeWarikanServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WarikanServer will
// result in compilation errors.
type UnsafeWarikanServer interface {
	mustEmbedUnimplementedWarikanServer()
}

func RegisterWarikanServer(s grpc.ServiceRegistrar, srv WarikanServer) {
	s.RegisterService(&Warikan_ServiceDesc, srv)
}

func _Warikan_CreateBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).CreateBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_CreateBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).CreateBill(ctx, req.(*CreateBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_ConnectBill_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConnectBillRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WarikanServer).ConnectBill(m, &warikanConnectBillServer{stream})
}

type Warikan_ConnectBillServer interface {
	Send(*ConnectBillResponse) error
	grpc.ServerStream
}

type warikanConnectBillServer struct {
	grpc.ServerStream
}

func (x *warikanConnectBillServer) Send(m *ConnectBillResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Warikan_ConfirmBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).ConfirmBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_ConfirmBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).ConfirmBill(ctx, req.(*ConfirmBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_AddUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_RemoveUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).RemoveUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_RemoveUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).RemoveUser(ctx, req.(*RemoveUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_GetUsersList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsersListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).GetUsersList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_GetUsersList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).GetUsersList(ctx, req.(*GetUsersListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_SetItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).SetItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_SetItems_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).SetItems(ctx, req.(*SetItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_AddItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).AddItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_AddItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).AddItem(ctx, req.(*AddItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_RemoveItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).RemoveItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_RemoveItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).RemoveItem(ctx, req.(*RemoveItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_GetItemsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).GetItemsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_GetItemsList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).GetItemsList(ctx, req.(*GetItemsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_GetItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).GetItem(ctx, req.(*GetItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_SetOwners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetItemOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).SetOwners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_SetOwners_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).SetOwners(ctx, req.(*SetItemOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_AddOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddItemOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).AddOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_AddOwner_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).AddOwner(ctx, req.(*AddItemOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_RemoveOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveItemOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).RemoveOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_RemoveOwner_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).RemoveOwner(ctx, req.(*RemoveItemOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warikan_GetItemOwnersList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemOwnersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarikanServer).GetItemOwnersList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Warikan_GetItemOwnersList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarikanServer).GetItemOwnersList(ctx, req.(*GetItemOwnersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Warikan_ServiceDesc is the grpc.ServiceDesc for Warikan service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Warikan_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "warikan.Warikan",
	HandlerType: (*WarikanServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBill",
			Handler:    _Warikan_CreateBill_Handler,
		},
		{
			MethodName: "ConfirmBill",
			Handler:    _Warikan_ConfirmBill_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _Warikan_AddUser_Handler,
		},
		{
			MethodName: "RemoveUser",
			Handler:    _Warikan_RemoveUser_Handler,
		},
		{
			MethodName: "GetUsersList",
			Handler:    _Warikan_GetUsersList_Handler,
		},
		{
			MethodName: "SetItems",
			Handler:    _Warikan_SetItems_Handler,
		},
		{
			MethodName: "AddItem",
			Handler:    _Warikan_AddItem_Handler,
		},
		{
			MethodName: "RemoveItem",
			Handler:    _Warikan_RemoveItem_Handler,
		},
		{
			MethodName: "GetItemsList",
			Handler:    _Warikan_GetItemsList_Handler,
		},
		{
			MethodName: "GetItem",
			Handler:    _Warikan_GetItem_Handler,
		},
		{
			MethodName: "SetOwners",
			Handler:    _Warikan_SetOwners_Handler,
		},
		{
			MethodName: "AddOwner",
			Handler:    _Warikan_AddOwner_Handler,
		},
		{
			MethodName: "RemoveOwner",
			Handler:    _Warikan_RemoveOwner_Handler,
		},
		{
			MethodName: "GetItemOwnersList",
			Handler:    _Warikan_GetItemOwnersList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ConnectBill",
			Handler:       _Warikan_ConnectBill_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "warikan.proto",
}
